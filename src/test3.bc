/*
define test(p, q) {
    if (p < 10) return p - q
    else return p + q
}
x = 5
test(x, 2 * x)
test(3 * x, x)
*/

/*
define factorial(n) {
    if (n <= 1) return 1
    else return n * factorial(n-1)
}
factorial(5)
*/

/*
i = 10
i--
i
*/

/*
define fibonacci(n) {
    print n, "num"
    if (n <= 1) return n
    else return (fibonacci(n-1) + fibonacci(n-2))
}
fibonacci(4)
*/

/*
i = 10
n = 0
while (i > 0) {
    i--
    n += i
}
n
*/

/*
n = e(1)
i = 8
while ((i - n) > 3) {
    n++
    i -= 2
}
n
*/

/*
i = 8
i++
i
*/

/*
j = 1
for (i = 1; i < 6; i++) {
    j *= i
}
j
*/

/*
if (6) return 5
*/